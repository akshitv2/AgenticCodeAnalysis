tasks:
  analysis_task:
    description: |
      Using the provided DirectoryReadTool, read and analyze all the Java source files located in the project directory. 
      Focus on understand which specialist is best suited to handle each process and assign them which classes to read.
      Agents available are: journey_developer, application_developer, api_developer, security_analyst
    agent: lead_agent
    expected_output: A summary report of the Java project after assigning each developer their task. (Keep it less than 5 lines and in .md syntax)
  journey_task:
    description: |
      Using the provided DirectoryReadTool, read and analyze all the java files assigned to you. 
      Focus on understand the classes and provide an explanation of the entire journey and what it does.
    agent: journey_developer
    expected_output: A report of flow of control and use of journey. (Keep it less than 5 lines and in .md syntax)
  application_task:
    description: |
      Using the provided DirectoryReadTool, read and analyze all the java files assigned to you. 
      Focus on understand methods exposed and params expected in each.
    agent: application_developer
    expected_output: A detailed report of methods and params across each class.  (Keep it less than 20 lines and in .md syntax)
  api_task:
    description: |
      Using the provided DirectoryReadTool, read and analyze all the java files assigned to you. 
      Focus on reporting which apis are exposed in the controllers.
    agent: api_developer
    expected_output: detailed report of api endpoints and how to call them.  (Keep it less than 10 lines and in .md syntax)
  security_analysis_task:
    description: |
      Using the provided DirectoryReadTool, read and analyze all dependency containing files searching for libraries.
      Use search_tool to check their version online and fetch_webpage_tool to fetch pages with info of them. 
      Make a list of all dependencies which have vulnerabilities.
    agent: security_analyst
    expected_output: tabular report of api libraries and any vulnerabilities in them. Only mention dependency and cve  (in .md syntax)
